/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #98ff00 */ee.Geometry.Polygon(
        [[[115.22572416788546, -1.83869426059422],
          [115.22575635439364, -1.8398738245232875],
          [115.22697944170443, -1.8399059944377034],
          [115.22697944170443, -1.838640644033473]]]),
    geometry2 = /* color: #d63000 */ee.Geometry.Polygon(
        [[[110.73823803368373, 0.6100388349170259],
          [110.27681225243373, -0.5984348516488113],
          [111.28755443993373, -1.52111857669315],
          [113.13325756493373, -1.0158729714048715],
          [112.43013256493373, 0.2145420473210763],
          [111.24360912743373, 0.9176283174576803]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// forchangeextract
// 30 October 2018
// by Luis
// Extracts forest loss pixels for each year and region of interest
// Output (exported to drive) is a csv table with level 2 region code in the first column
// and a histogram of pixel counts of forest loss for each year (0 is no loss, 1-17 are years:
// 2001-2017) 

// 1. Data
// Pulls Hansen forest loss dataset
var hansen = ee.Image("UMD/hansen/global_forest_change_2017_v1_5");
var treeLoss = hansen.select('lossyear');
var treeLossVis = {
  min: 0.0,
  max: 17.0,
  palette: ['080a02', '080a02', '080a02', '106e12', '37a930', '03ff17'],
};


// Reads boundaries dataset
var level2bound = ee.FeatureCollection("users/luiscartor/gadm36_2_reduced");
var filtered = level2bound.filterBounds(geometry2);



var result = filtered.map(function(feature){
  return feature.set(treeLoss.reduceRegion({
    //reducer: ee.Reducer.fixedHistogram(0,18,18),
    reducer: ee.Reducer.sum()
    geometry:feature.geometry(), 
    maxPixels:1e12,
  }))
})

print(result)

Export.table.toDrive({
  collection:result,
  description:'indtest3',
  fileFormat:'CSV',
  selectors: (['GID_2','lossyear'])
})



// Uncomment this to visualize tree canopy cover
Map.addLayer(treeLoss, treeLossVis, 'Tree Canopy Cover');
// Plot boundaries
Map.addLayer(filtered)





