/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #98ff00 */ee.Geometry.MultiPolygon(
        [[[[111.38071045235051, -0.854648797384758],
           [111.38071045235051, -0.855893203712878],
           [111.38264164284124, -0.8556786509264758],
           [111.38255581215276, -0.8541338705103148]]],
         [[[111.3644455368842, -0.8530611059670261],
           [111.36448845222844, -0.8550779030607143],
           [111.36560425117864, -0.854949171362968],
           [111.36564716652288, -0.8532756588996194]]],
         [[[111.01132094520494, -0.8123918406137343],
           [111.01389586585924, -0.8145373915649329],
           [111.01423918861315, -0.8129925949950401]]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// forchangeextract
// 30 October 2018
// by Luis
// Extracts forest loss pixels for each year and region of interest
// Output (exported to drive) is a csv table with level 2 region code in the first column
// and a histogram of pixel counts of forest loss for each year (0 is no loss, 1-17 are years:
// 2001-2017) 

// 1. Read and Subset Data
// 1.1 Pulls Hansen forest loss dataset
var hansen = ee.Image("UMD/hansen/global_forest_change_2017_v1_5");
// Create mask to avoid exclude pixels with no forest
var treeCover = hansen.mask(hansen.select('treecover2000'))
// Selects band with loss year (value of zero is no loss)
var treeLoss = treeCover.select('lossyear');

// 1.2 Reads boundaries dataset
var level2bound = ee.FeatureCollection("users/luiscartor/gadm36_2_reduced");

// Subsets to country: Indonesia = IDN. Comment if extracting for the whole dataset
// If using filtered featured collection, change naming in map function.
var filtered = level2bound.filter(ee.Filter.eq('GID_2', 'BRA.5.86_1'));

// 2. Analysis
// Select input feature collection
var inputcoll = filtered
// Creats histogram of number of pixels per year of loss (or zero for no loss)
var result = inputcoll.map(function(feature){
  return feature.set(treeLoss.reduceRegion({
    reducer: ee.Reducer.fixedHistogram(0,18,18),
    //reducer: ee.Reducer.count(),
    geometry:feature.geometry(), 
    maxPixels:1e13,
  }))
})

// 2. Outputs
// 2.1 Print result (if small enough, otherwise "timeout" error)
print(result)

// 2.2 Export to drive as a .csv
Export.table.toDrive({
  collection:result,
  // Edit dataset name
  description:'level2_forestloss',
  fileFormat:'CSV',
  // Subset output features to reduce export time
  selectors: (['GID_2','lossyear'])
})


// 2.3 Data visualization

// Plots tree cover
Map.addLayer(treeCover,
  {bands: ['treecover2000'],max: 255, palette: ['080a02', '03ff17']},
  'Forest cover');
// Plots year of forest loss  
Map.addLayer(treeLoss, 
  {min: 0.0, max: 17.0, palette: ['080a02', '03ff17']}, 
  'Year of loss');
// Plots boundaries with extracted data
Map.addLayer(result)






